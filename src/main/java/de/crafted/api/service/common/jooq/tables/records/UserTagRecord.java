/*
 * This file is generated by jOOQ.
 */
package de.crafted.api.service.common.jooq.tables.records;


import de.crafted.api.service.common.jooq.enums.Tag;
import de.crafted.api.service.common.jooq.tables.UserTag;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTagRecord extends UpdatableRecordImpl<UserTagRecord> implements Record2<Long, Tag> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_tag.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>user_tag.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user_tag.tag</code>.
     */
    public void setTag(Tag value) {
        set(1, value);
    }

    /**
     * Getter for <code>user_tag.tag</code>.
     */
    public Tag getTag() {
        return (Tag) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Tag> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Tag> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Tag> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserTag.USER_TAG.USER_ID;
    }

    @Override
    public Field<Tag> field2() {
        return UserTag.USER_TAG.TAG;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Tag component2() {
        return getTag();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Tag value2() {
        return getTag();
    }

    @Override
    public UserTagRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserTagRecord value2(Tag value) {
        setTag(value);
        return this;
    }

    @Override
    public UserTagRecord values(Long value1, Tag value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTagRecord
     */
    public UserTagRecord() {
        super(UserTag.USER_TAG);
    }

    /**
     * Create a detached, initialised UserTagRecord
     */
    public UserTagRecord(Long userId, Tag tag) {
        super(UserTag.USER_TAG);

        setUserId(userId);
        setTag(tag);
    }
}
